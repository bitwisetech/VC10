<?xml version="1.0" encoding="UTF-8"?>
<!--####################################################################
Lake of Constance Hangar
Vickers VC10 for Flightgear
Copyright (C) 2013 M.Kraus

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

Every software has a developer, also free software. 
As a gesture of courtesy and respect, I would be delighted 
if you contacted me before making any changes to this software. 
<info (at) marc-kraus.de> April, 2017
########################################################################-->
 
<!-- Autopilot Configuration -->
<!-- Each component is evaluated in the order specified.  You can make up -->
<!-- property names to pass the result of one component on to a subsequent -->
<!-- component. -->

<!--    ===============================          -->
<!--    ==== A/P Lateral Modes   ======          -->
<!--    ===============================          -->
<!--                                             -->
<!--      Flt-RoC-RolKnob   =>  TgtRolDeg~L2     -->   
<!--      Flt-HdgErr|180|   =>  HdgBugErrDeg     -->   
<!--      PIS-DGHdgErr      =>  TgtRolUnf~L1     -->   
<!--      PIS-TruHdgErr     =>  TgtRolUnf~L1     -->   
<!--      Flt-RoC-TgtRolUnf =>  TgtRolDeg~L2     -->   
<!--      PID-Nv1HdgErr     =>  TgtRolDeg~L2     -->   
<!--      PID-TgtRolDeg     =>  AilrSrvo~L3      -->   
<!--      Flt-RoC-AilSrv    =>  AilrFCS          -->   
<!--      PIS-RollDeg       =>  RddrSrv~L4       -->   
<!--      PID-YawDmpSkid    =>  RddrSrv          -->   
<!--      Flt-RoC-RdrSrv    =>  RdrFCS           -->   
<!--      PID-YDSkidBall    =>  RdrTrm~L5        -->   
<!--                                             -->
<!--    ===============================          -->
<!--                                             -->
<!--    ===============================          -->
<!--    ==== A/P Vertical Modes  ======          -->
<!--    ===============================          -->
<!--                                             -->
<!--      PID-TgtPit        =>  ElvSrv~V2        -->
<!--      PID-TgtAoA        =>  ElvSrv~V2        -->
<!--      PID-AltHldErr     =>  TgtFps~V1        -->
<!--      PIS-AGLHld        =>  TgtFps~V1        -->  
<!--      PID-TgtFps        =>  ElvSrv~V2        -->
<!--      PID-GSRoCErr      =>  ElvSrv~V2        -->
<!--      PID-VSHldFps      =>  ElvSrv~V2        -->
<!--      PID-VSpdPit       =>  ThrSrv           -->
<!--      Flt-RoC-ElvPosn   =>  ElvNasNoNo       -->
<!--      Flt-Roc-ElvSrv    =>  ElvFCS           -->
<!--      PID-ElvSrv        =>  ElVTrmFCS~V3     -->
<!--                                             -->
<!--    ===============================          -->
<!--                                             -->
<!--    ===============================          -->
<!--    ==== Autotrim Control    ======          -->
<!--    ===============================          -->
<!--                                             -->
<!--      PID-TgtSpdErr       =>  SpdPitDeg      -->
<!--      Flt-RoC-SpPtDg      =>  SpPitDgFltd    -->
<!--      PID-SpPitDgFltd     =>  ElvSrv         -->
<!--      PID-AltSpPt-VS      =>  ThrSrv         -->
<!--      PID-GSSpPt-VSNFFltd =>  ThrSrv         -->
<!--      PID-TgtIAS          =>  ThrSrv         -->
<!--      Flt-RoC-ThrSrv      =>  4xThrs         -->
<!--                                             -->
<!--    ===============================          -->


<PropertyList>

  <!-- =============================================================== -->
  <!-- Roll Axis Modes                                                 -->
  <!-- =============================================================== -->
  <!-- polly moved servo drivers to end of sections -->

  <!-- Limit change rate from PB-20 Roll Knob  -->
  <filter>
	<type>noise-spike</type>
	<name>Flt-RoC-RolKnob=>TgtRolDeg~L2</name>
	<debug>false</debug>
	<enable>
		<equals>
			<property>/autopilot/locks/heading</property>
			<value>wing-leveler</value>
		</equals>
	</enable>
	<max-rate-of-change>
		<value>2.0</value>
	</max-rate-of-change>
	<initialize-to>output</initialize-to>
	<input>
    <condition>
      <property>/systems/tune/pids-lat2-open</property>
    </condition>
    <expression>
      <product>
        <property>/systems/tune/poke-latr-mark</property>
        <value>-10.0</value>
      </product>  
	  </expression>
	</input>
	<input>
		<property>/autopilot/internal/wing-leveler-target-roll-deg</property>
	</input>
	<output>/autopilot/internal/target-roll-deg</output>
  <!--polly: Copy signal to xbar: Stanza must not precede real output -->
  <output>
    <property>/systems/tune/pids-lat2-out</property>
	</output>
  </filter>

  <!-- Heading Bug Hold.  2 stage cascade controller. -->
  <filter>
	<type>gain</type>
	<name>Flt-HdgErr|180|=>HdgBugErrDeg</name>
	<debug>false</debug>
	<input>
		<property>/autopilot/settings/heading-bug-deg</property>
		<offset>
			<property>VC10/hsi/indicated-heading-deg</property>
			<scale>-1.0</scale>
		</offset>
	</input>
	<output>/autopilot/internal/heading-bug-error-deg</output>
	<period>
		<min>-180</min>
		<max>180</max>
	</period>
	<gain>1.0</gain>
  </filter>

  <!-- Stage #1 sets target roll based on diff between current heading -->
  <!-- and heading bug. -->
  <pi-simple-controller>
	<!--name>Heading Bug Hold (DG based) Stage 1</name-->
	<name>PIS-DGHdgErr=>TgtRolUnf~L1</name>
	<debug>false</debug>
	<enable>
		<condition>
			<equals>
				<property>/autopilot/locks/heading</property>
				<value>dg-heading-hold</value>
			</equals>
		</condition>
	</enable>
	<input>
		<property>/autopilot/internal/heading-bug-error-deg</property>
	</input>
  <!-- polly  kybd hotkey direct control -->
  <reference>
    <condition>
      <property>/systems/tune/pids-lat1-open</property>
    </condition>
    <expression>
      <product>
        <property>/systems/tune/poke-latr-mark</property>
        <value>-10.0</value>
      </product>  
	  </expression>
  </reference>
	<reference>0.0</reference>
	<output>
		<property>/autopilot/internal/target-roll-deg-unfiltered</property>
	</output>
  <!--polly: Copy signal to xbar: Stanza must not precede real output -->
  <output>
    <property>/systems/tune/pids-lat1-out</property>
	</output>
	<config>
		<Kp>/autopilot/internal/target-kp-for-heading-deg</Kp>
		<!--Kp>-2.6</Kp-->
		<u_min>/autopilot/internal/heading-min-roll</u_min>
		<u_max>/autopilot/internal/heading-max-roll</u_max>
	</config>
  </pi-simple-controller>

  <!-- True Heading hold.  2 stage cascade controller. -->

  <!-- Stage #1 sets target roll based on diff between current heading -->
  <!-- and target heading. -->
  <!-- tbd polly replaced with =- 180 filter and PID in 707    -->
  <pi-simple-controller>
	<!--name>True Heading Hold (DG based) Stage 1</name-->
	<name>PIS-TruHdgErr=>TgtRolUnf~L1</name>
	<debug>false</debug>
	<enable>
		<condition>
			<equals>
				<property>/autopilot/locks/heading</property>
				<value>true-heading-hold</value>
			</equals>
		</condition>
	</enable>
	<input>
		<property>/autopilot/internal/true-heading-error-deg</property>
	</input>
  <!-- polly  kybd hotkey direct control -->
  <reference>
    <condition>
      <property>/systems/tune/pids-lat1-open</property>
    </condition>
    <expression>
      <product>
        <property>/systems/tune/poke-latr-mark</property>
        <value>-1.00</value>
      </product>  
	  </expression>
  </reference>
	<reference>0.0</reference>
	<output>
		<property>/autopilot/internal/target-roll-deg-unfiltered</property>
	</output>
  <!--polly: Copy signal to xbar: Stanza must not precede real output -->
  <output>
    <property>/systems/tune/pids-lat1-out</property>
	</output>
	<config>
		<Kp>/autopilot/internal/target-kp-for-heading-deg</Kp>
		<u_min>/autopilot/internal/heading-min-roll</u_min>
		<u_max>/autopilot/internal/heading-max-roll</u_max>
	</config>
  </pi-simple-controller>

  <filter>
	<type>noise-spike</type>
	<name>FltRoc-TgtRolUnf=>TgtRolDeg~L2</name>
	<debug>false</debug>
	<feedback-if-disabled>true</feedback-if-disabled>
	<enable>
		<condition>
			<or>
				<equals>
					<property>/autopilot/locks/heading</property>
					<value>dg-heading-hold</value>
				</equals>
				<equals>
					<property>/autopilot/locks/heading</property>
					<value>true-heading-hold</value>
				</equals>
			</or>
		</condition>
	</enable>
	<input>
    <condition>
      <property>/systems/tune/pids-lat2-open</property>
    </condition>
    <expression>
      <product>
        <property>/systems/tune/poke-latr-mark</property>
        <value>-10.0</value>
      </product>  
	  </expression>
	</input>
	<input>/autopilot/internal/target-roll-deg-unfiltered</input>
	<output>/autopilot/internal/target-roll-deg</output>
  <!--polly: Copy signal to xbar: Stanza must not precede real output -->
  <output>
    <property>/systems/tune/pids-lat2-out</property>
	</output>
	<max-rate-of-change>3.0</max-rate-of-change>
	<!-- polly max-rate-of-change>6.0</max-rate-of-change-->
  </filter>

  <!-- Nav1 hold.  2 stage cascade controller. -->

  <!-- Stage #1 sets target roll based on diff between current heading -->
  <!-- and target heading. -->
  <pid-controller>
	<!--name>Nav1 Hold Stage 1</name-->
	<name>PID-Nv1HdgErr=>TgtRolDeg~L2</name>
	<debug>false</debug>
	<enable>
		<prop>/autopilot/locks/heading</prop>
		<value>nav1-hold</value>
	</enable>
  <!-- polly  Inject input signal via kybd hotkey -->
  <input>
    <condition>
      <property>/systems/tune/pids-lat2-open</property>
    </condition>
    <property>/systems/tune/poke-latr-mark</property>
  </input>
	<input>
		<prop>/autopilot/internal/nav1-heading-error-deg</prop>
	</input>
	<reference>
		<value>0.0</value>
	</reference>
	<output>
		<prop>/autopilot/internal/target-roll-deg</prop>
	</output>
  <!--polly: Copy signal to xbar: Stanza must not precede real output -->
  <output>
    <property>/systems/tune/pids-lat2-out</property>
	</output>
	<config>
		<Kp>/autopilot/internal/target-kp-for-heading-deg</Kp>
		<!-- polly Kp>-2.6</Kp-->
		<beta>1.0</beta>
		<alpha>0.1</alpha>
		<gamma>0.0</gamma>
		<Ti>15.0</Ti>
		<Td>0.0004</Td>
		<u_min>-20.0</u_min>
		<u_max>20.0</u_max>
	</config>
  </pid-controller>

  <!-- Wing leveler/Heading-Bug/True/Nav1 - Stage #2 drives the ailerons(-servo) to achieve the desired roll deg. -->
  <pid-controller>
	<!--name>Heading Hold - Stage 2 - all Heading modes</name-->
	<name>PID-TgtRolDeg=>AilrSrvo~L3</name>
	<debug>false</debug>
	<enable>
		<condition>
			<or>
				<equals>
					<property>/autopilot/locks/heading</property>
					<value>wing-leveler</value>
				</equals>
				<equals>
					<property>/autopilot/locks/heading</property>
					<value>dg-heading-hold</value>
				</equals>
				<equals>
					<property>/autopilot/locks/heading</property>
					<value>true-heading-hold</value>
				</equals>
				<equals>
					<property>/autopilot/locks/heading</property>
					<value>nav1-hold</value>
				</equals>
			</or>
		</condition>
	</enable>
	<input>
		<property>/orientation/roll-deg</property>
	</input>
  <!-- polly  Inject input signal via kybd hotkey -->
  <reference>
    <condition>
      <property>/systems/tune/pids-lat3-open</property>
    </condition>
    <expression>
      <product>
        <property>/systems/tune/poke-latr-mark</property>
        <value>50.0</value>
      </product>
    </expression>
  </reference>
	<reference>
    <!-- polly WL filter output renamed to tgt-rol-deg and included  -->
		<condition>
			<or>
			  <equals>
				  <property>/autopilot/locks/heading</property>
				  <value>wing-leveler</value>
			  </equals>
				<equals>
					<property>/autopilot/locks/heading</property>
					<value>dg-heading-hold</value>
				</equals>
				<equals>
					<property>/autopilot/locks/heading</property>
					<value>true-heading-hold</value>
				</equals>
				<equals>
					<property>/autopilot/locks/heading</property>
					<value>nav1-hold</value>
				</equals>
			</or>
		</condition>
		<property>/autopilot/internal/target-roll-deg</property>
	</reference>
		<!-- hold wing level ('smooting' behaviour at VOR-transition) -->
    <!--   polly: issue nasal only returns +ve tgtRoldeg near VOR ?? Section deleted -->  
	<output>
		<property>/autopilot/internal/aileron-servo</property>
	</output>
	<!--polly: Copy signal to xbar: Stanza must not precede real output -->
  <output>
    <property>/systems/tune/pids-lat3-out</property>
	</output>
	<config>
		<Kp>/autopilot/internal/target-kp-for-heading-hold</Kp>
		<beta>1.0</beta>
		<alpha>0.1</alpha>
		<gamma>0.0</gamma>
		<Ti>/autopilot/internal/target-ti-for-heading-hold</Ti>
		<Td>0.05</Td>
		<u_min>-1.0</u_min>
		<u_max>1.0</u_max>
	</config>
  </pid-controller>

  <!-- =============================================================== -->
  <!-- aileron servo driver.                                           -->
  <!-- =============================================================== -->

	<filter>
		<type>noise-spike</type>
		<name>FltRoC-AilSrv=>AilrFCS</name>
		<debug>false</debug>
		<feedback-if-disabled>true</feedback-if-disabled>
		<enable>
			<condition>
				<or>
					<equals>
						<property>/autopilot/locks/heading</property>
						<value>dg-heading-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/heading</property>
						<value>true-heading-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/heading</property>
						<value>nav1-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/heading</property>
						<value>wing-leveler</value>
					</equals>
				</or>
			</condition>
		</enable>
		<input>/autopilot/internal/aileron-servo</input>
		<output>/controls/flight/aileron</output>
		<output>/controls/flight/aileron-fcs</output>
		<!-- polly max-rate-of-change>0.8</max-rate-of-change-->
		<max-rate-of-change>1.6</max-rate-of-change>
	</filter>

  <!-- =============================================================== -->
  <!-- Yaw Axis                                                        -->
  <!-- =============================================================== -->

  <!-- Stage drives the rudder in order to the actual roll. -->
  <pi-simple-controller>
	<!--name>Heading Bug Hold (DG based) Stage 3</name-->
	<name>PIS-RollDeg=>RddrSrv~L4</name>
	<debug>false</debug>
	<enable>
		<condition>
			<and>
				<not><property>gear/gear[0]/wow</property></not>
				<not><property>gear/gear[1]/wow</property></not>
				<not><property>gear/gear[3]/wow</property></not>
				<or>
					<equals>
						<property>/autopilot/locks/heading</property>
						<value>dg-heading-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/heading</property>
						<value>true-heading-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/heading</property>
						<value>nav1-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/heading</property>
						<value>wing-leveler</value>
					</equals>
				</or>
			</and>
		</condition>
	</enable>
  <!-- polly  Inject input signal via kybd hotkey -->
  <input>
    <condition>
      <property>/systems/tune/pids-lat4-open</property>
    </condition>
    <property>/systems/tune/poke-latr-mark</property>
  </input>
	<input>
		<property>/orientation/roll-deg</property>
	</input>
	<reference>0.0</reference>
	<output>
		<property>/autopilot/internal/rudder-servo</property>
	</output>
	<!--polly: Copy signal to xbar: Stanza must not precede real output -->
  <output>
    <property>/systems/tune/pids-lat4-out</property>
	</output>
	<config>
		<Kp>-0.004</Kp>
		<u_min>-0.4</u_min>
		<u_max>0.4</u_max>
	</config>
  </pi-simple-controller>
  
  <!-- polly try Yaw Damper -->
	<pid-controller>
		<name>Heading Bug Hold (DG based) Stage 3 (Rudder)</name>
		<name>PID-YawDmpSkid=>RddrSrv</name>
		<debug>true</debug>
		<enable>
		  <condition>
			  <and>
				  <not><property>gear/gear[0]/wow</property></not>
				  <not><property>gear/gear[1]/wow</property></not>
				  <not><property>gear/gear[3]/wow</property></not>
				  <equals>
					  <property>/autopilot/internal/yaw-damper</property>
					  <value>1</value>
				  </equals>
			  </and>
		  </condition>
		</enable>
		<input>
			<property>instrumentation/slip-skid-ball/indicated-slip-skid</property>
		</input>
		<reference>
      <condition>
        <property>/systems/tune/pids-lat4-open</property>
      </condition>
      <expression>
        <product>
          <property>/systems/tune/poke-latr-mark</property>
          <value>10.0</value>
        </product>  
	    </expression>
		</reference>
		<reference>
			<value>0.0</value>
		</reference>
		<output>
			<property>/autopilot/internal/rudder-servo</property>
		</output>
		<config>
			<Kp>0.025</Kp>
			<beta>1.0</beta>
			<alpha>0.1</alpha>
			<gamma>0.0</gamma>
			<Ti>1.0</Ti>
			<Td>0.001</Td>
			<u_min>-0.2</u_min>
			<u_max>0.2</u_max>
		</config>
	</pid-controller>

  <!-- =============================================================== -->
  <!-- rudder servo driver.                                            -->
  <!-- =============================================================== -->

	<filter>
		<type>noise-spike</type>
		<name>Flt-RoCRdrSrv=>RdrFCS</name>
		<debug>false</debug>
		<feedback-if-disabled>true</feedback-if-disabled>
		<enable>
			<condition>
				<or>
					<equals>
						<property>/autopilot/locks/heading</property>
						<value>dg-heading-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/heading</property>
						<value>true-heading-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/heading</property>
						<value>wing-leveler</value>
					</equals>
					<equals>
						<property>/autopilot/locks/heading</property>
						<value>nav1-hold</value>
					</equals>
				  <equals>
					  <property>/autopilot/internal/yaw-damper</property>
					  <value>1</value>
				  </equals>
				</or>
			</condition>
		</enable>
		<input>/autopilot/internal/rudder-servo</input>
		<output>/controls/flight/rudder</output>
		<output>/controls/flight/rudder-fcs</output>
		<max-rate-of-change>0.08</max-rate-of-change>
	</filter>

	<!-- Yaw Damper -->
	<pid-controller>
		<name>Yaw Damper (it's a guess: fast working controller on rudder-trim)</name>
		<name>PID-YDSkidBall=>RdrTrm~L5</name>
		<debug>false</debug>
		<enable>
			<condition>
				<property>/autopilot/internal/yaw-damper</property>
				<value>1</value>
			</condition>
		</enable>
		<input>
			<property>instrumentation/slip-skid-ball/indicated-slip-skid</property>
		</input>
		<reference>
			<value>0.0</value>
		</reference>
		<output>
			<property>/controls/flight/rudder-trim</property>
		</output>
	  <!--polly: Copy signal to xbar: Stanza must not precede real output -->
    <output>
      <property>/systems/tune/pids-lat5-out</property>
	  </output>
		<config>
			<Kp>0.005</Kp>
			<beta>1.0</beta>
			<alpha>0.1</alpha>
			<gamma>0.0</gamma>
			<Ti>0.1</Ti>
			<Td>0.001</Td>
			<u_min>-0.2</u_min>
			<u_max>0.2</u_max>
		</config>
	</pid-controller>

 <!-- =============================================================== -->
 <!-- Pitch Axis Modes                                                -->
 <!-- =============================================================== -->

 <!-- Simple pitch hold --> 
 <pid-controller>
    <name>PID-TgtPit=>ElvSrv~V2Err</name>
    <debug>false</debug>
    <enable>
      <prop>/autopilot/locks/altitude</prop>
      <value>pitch-hold</value>
    </enable>
    <input>
      <prop>/orientation/pitch-deg</prop>
    </input>
    <!-- polly  Inject input signal via kybd hotkey -->
    <reference>
      <condition>
        <property>/systems/tune/pids-vrt2-open</property>
        <value>1</value>
      </condition>
    <expression>
      <product>
        <property>/systems/tune/poke-vert-mark</property>
        <value>10.0</value>
      </product>  
	  </expression>
    </reference>
    <reference>
      <prop>/autopilot/settings/target-pitch-deg</prop>
    </reference>
    <output>
      <prop>/autopilot/internal/elevator-servo</prop>
    </output>
	  <!--polly: Copy signal to xbar: Stanza must not precede real output -->
	  <output>
		  <property>/systems/tune/pids-vrt2-out</property>
	  </output>
    <config>
      <!--Kp>/autopilot/internal/target-kp-for-pitch-hold</Kp-->
      <Kp>-0.010</Kp>
      <beta>0.4</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>2.00</Ti>        <!-- integrator time -->
      <Td>0.0001</Td>    <!-- derivator time -->
      <u_min>-1.0</u_min> <!-- minimum output clamp -->
      <u_max>1.0</u_max>  <!-- maximum output clamp -->
    </config>
   </pid-controller>

 <!-- Simple angle of attack hold --> 
 <pid-controller>
    <name>PID-TgtAoA=>ElvSrv~V2</name>
    <debug>false</debug>
    <enable>
      <prop>/autopilot/locks/altitude</prop>
      <value>aoa-hold</value>
    </enable>
    <input>
      <prop>/orientation/alpha-deg</prop>
    </input>
    <!-- polly  Inject input signal via kybd hotkey -->
    <reference>
      <condition>
        <property>/systems/tune/pids-vrt2-open</property>
        <value>1</value>
      </condition>
  	  <expression>
        <product>
          <property>/systems/tune/poke-vert-mark</property>
          <value>1.00</value>
        </product>  
		  </expression>
    </reference>
    <reference>
      <prop>/autopilot/settings/target-aoa-deg</prop>
    </reference>
    <output>
      <prop>/autopilot/internal/elevator-servo</prop>
    </output>
	  <!--polly: Copy signal to xbar: Stanza must not precede real output -->
	  <output>
		  <property>/systems/tune/pids-vrt2-out</property>
	  </output>
    <config>
      <Kp>-0.05</Kp>      <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>0.5</Ti>        <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>-1.0</u_min> <!-- minimum output clamp -->
      <u_max>1.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>

  <!-- Altitude hold.  2 stage cascade controller. -->

  <!-- Stage #1 sets target rate of climb based on diff between current alt -->
  <!-- and target altitude. -->
  <!-- polly change to pid: error proportional -->
  <pid-controller>
    <!--name>Altitude Hold (Altimeter based) Stage 1</name-->
    <name>PID-AltHldErr=>TgtFps~V1</name>
    <debug>false</debug>
    <enable>
      <prop>/autopilot/locks/altitude</prop>
      <value>altitude-hold</value>
    </enable>
    <input>
      <!-- <prop>/position/altitude-ft</prop> -->
      <prop>/instrumentation/altimeter/indicated-altitude-ft</prop>
    </input>
    <!-- polly  Inject input signal via kybd hotkey tgt 100x ft  -->
    <reference>
      <condition>
        <property>/systems/tune/pids-vrt1-open</property>
      </condition>
      <expression>
       <product>      
         <property>/systems/tune/poke-vert-mark</property>
         <value>100</value>
       </product>      
      </expression>
    </reference>
    <reference>
      <prop>/autopilot/settings/target-altitude-ft</prop>
    </reference>
    <output>
      <prop>/autopilot/internal/target-climb-rate-fps</prop>
    </output>
	  <!--polly: Copy signal to xbar: Stanza must not precede real output -->
	  <!--     3000fpm: 50fps   -->
    <output>
		  <property>/systems/tune/pids-vrt1-out</property>
	  </output>
    <config>
      <Kp>0.01</Kp>
      <Ti>2.000</Ti>
      <Td>0.001</Td>
      <alpha>0.100</alpha>
      <beta>00.010</beta>
      <gamma>1.000</gamma>
      <u_min>-25.0</u_min> <!-- minimum output clamp -->
      <u_max>50.0</u_max>   <!-- maximum output clamp -->
    </config>
  </pid-controller>

  <!-- AGL hold.  2 stage cascade controller. -->

  <!-- Stage #1 sets target rate of climb based on diff between current agl -->
  <!-- and target agl. -->
  <pi-simple-controller>
    <!--name>AGL Hold (Altimeter based) Stage 1</name-->
    <name>PIS-AGLHld=>TgtFps~V1Err</name>
    <debug>false</debug>
    <enable>
      <prop>/autopilot/locks/altitude</prop>
      <value>agl-hold</value>
    </enable>
    <input>
      <prop>/position/altitude-agl-ft</prop>
    </input>
    <!-- polly  Inject input signal via kybd hotkey tgt 100x ft  -->
    <reference>
      <condition>
        <property>/systems/tune/pids-vrt1-open</property>
      </condition>
      <expression>
       <product>      
         <property>/systems/tune/poke-vert-mark</property>
         <value>100</value>
       </product>      
      </expression>
    </reference>
    <reference>
      <prop>/autopilot/settings/target-agl-ft</prop>
    </reference>
    <output>
      <prop>/autopilot/internal/target-climb-rate-fps</prop>
    </output>
	  <!--polly: Copy signal to xbar: Stanza must not precede real output -->
	  <!--     3000fpm: 50fps   -->
    <output>
		  <property>/systems/tune/pids-vrt1-out</property>
	  </output>
    <config>
      <Kp>0.3</Kp>          <!-- proportional gain -->
      <Ki>0.0</Ki>          <!-- integral gain -->
      <u_min>-25.0</u_min> <!-- minimum output clamp -->
      <u_max>25.0</u_max>   <!-- maximum output clamp -->
    </config>
  </pi-simple-controller>

  <!-- Altitude/AGL Stage #2 drives the elevator-trim(-servo) to achieve the desired climb rate. -->
  <pid-controller>
    <!--name>Altitude/AGL Hold (Altimeter based) Stage 2</name-->
    <name>PID-TgtFps=>ElvSrv~V2Out</name>
    <debug>false</debug>
    <enable>
	    <condition>
		    <or>
			    <equals>
				    <property>/autopilot/locks/altitude</property>
				    <value>agl-hold</value>
			    </equals>
			    <equals>
				    <property>/autopilot/locks/altitude</property>
				    <value>altitude-hold</value>
			    </equals>
		    </or>
		    <not>
			    <equals>
				    <property>/autopilot/locks/speed</property>
				    <value>speed-with-pitch-trim</value>
			    </equals>
		    </not>
	    </condition>
    </enable>
    <input>
      <property>/velocities/vertical-speed-fps</property>
    </input>
    <!-- polly  Inject input signal via kybd hotkey -->
    <reference>
      <condition>
        <property>/systems/tune/pids-vrt2-open</property>
        <value>1</value>
      </condition>
      <property>/systems/tune/poke-vert-mark</property>
    </reference>
    <reference>
      <property>/autopilot/internal/target-climb-rate-fps</property>
    </reference>
    <output>
      <property>/autopilot/internal/elevator-servo</property>
    </output>
    <!--polly: Copy signal to xbar: Stanza must not precede real output -->
    <output>
      <property>/systems/tune/pids-vrt2-out</property>
	  </output>
    <config>
      <!--Kp>/autopilot/internal/target-kp-for-alt-hold</Kp-->
      <Kp>-0.0010</Kp>
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>8.0</Ti>       <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>-1.0</u_min> <!-- minimum output clamp -->
      <u_max>1.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>

  <!-- Glideslope hold. -->

  <!-- Stage #2 drives the elevator-trim(-servo) to achieve the desired climb rate. -->
  <pid-controller>
    <name>Glideslop Hold</name>
    <name>PID-GSRoCErr=>ElvSrv~V2Out</name>
    <debug>false</debug>
    <enable>
	    <condition>
		    <equals>
			    <property>/autopilot/locks/altitude</property>
			    <value>gs1-hold</value>
		    </equals>
		    <not>
			    <equals>
				    <property>/autopilot/locks/speed</property>
				    <value>speed-with-pitch-trim</value>
			    </equals>
		    </not>
	    </condition>
    </enable>
    <input>
      <prop>/velocities/vertical-speed-fps</prop>
    </input>
    <!-- polly  Inject input signal via kybd hotkey -->
    <reference>
      <condition>
        <property>/systems/tune/pids-vrt2-open</property>
        <value>1</value>
      </condition>
      <property>/systems/tune/poke-vert-mark</property>
    </reference>
    <reference>
      <prop>/autopilot/internal/gs-rate-of-climb-near-far-filtered</prop>
    </reference>
     <output>
      <prop>/autopilot/internal/elevator-servo</prop>
    </output>
	  <!--polly: Copy signal to xbar: Stanza must not precede real output -->
	  <output>
		  <property>/systems/tune/pids-vrt2-out</property>
	  </output>
    <config>
      <Kp>/autopilot/internal/target-kp-for-gs-hold</Kp>     <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>9.0</Ti>        <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>-1.0</u_min> <!-- minimum output clamp -->
      <u_max>1.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>

  <!-- vertical speed hold -->
  <pid-controller>
    <!--name>Vertical Speed Hold</name-->
    <name>PID-VSHldFps=>ElvSrv</name>
    <debug>false</debug>
    <enable>
	    <condition>
		    <equals>
			    <property>/autopilot/locks/altitude</property>
			    <value>vertical-speed-hold</value>
		    </equals>
		    <not>
			    <equals>
				    <property>/autopilot/locks/speed</property>
				    <value>speed-with-pitch-trim</value>
			    </equals>
		    </not>
	    </condition>
    </enable>
    <input>
      <prop>/velocities/vertical-speed-fps</prop>
    </input>
    <!-- polly  Inject input signal via kybd hotkey tgt 100x ft  -->
    <reference>
      <condition>
        <property>/systems/tune/pids-vrt2-open</property>
      </condition>
    <expression>
      <product>
        <!--  4800 fpm 80 fps -->
        <property>/systems/tune/poke-vert-mark</property>
        <value>80.0</value>
      </product>  
	  </expression>
    </reference>
    <reference>
      <prop>/autopilot/settings/vertical-speed-fpm</prop>
      <scale>0.01667</scale>
    </reference>
    <output>
      <prop>/autopilot/internal/elevator-servo</prop>
    </output>
	  <!--polly: Copy signal to xbar: Stanza must not precede real output -->
	  <output>
		  <property>/systems/tune/pids-vrt2-out</property>
	  </output>
    <config>
      <Kp>/autopilot/internal/target-kp-for-alt-hold</Kp>      <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>4.0</Ti>       <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>-1.0</u_min> <!-- minimum output clamp -->
      <u_max>1.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>

 <!-- Fallback for 'speed-with-pitch' - control vspeed with throttle --> 
 <pid-controller>
    <!--name>VSpeed-hold with throttle</name-->
    <name>PID-VSpdPit=>ThrSrv</name>
    <debug>false</debug>
    <enable>
	<condition>
		<equals>
			<property>/autopilot/locks/altitude</property>
			<value>vertical-speed-hold</value>
		</equals>
		<equals>
			<property>/autopilot/locks/speed</property>
			<value>speed-with-pitch-trim</value>
		</equals>
	</condition>
    </enable>
    <input>
      <prop>/velocities/vertical-speed-fps</prop>
      <scale>0.1</scale>
    </input>
    <reference>
      <prop>/autopilot/settings/vertical-speed-fpm</prop>
      <scale>0.001667</scale>
    </reference>
    <output>
      <prop>/autopilot/internal/throttle-servo</prop>
    </output>
    <config>
      <Kp>0.1</Kp>        <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>10.0</Ti>       <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>0.0</u_min>  <!-- minimum output clamp -->
      <u_max>1.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>


  <!-- =============================================================== -->
  <!-- filter for adjustment of elevator position.                     -->
  <!-- =============================================================== -->
	<filter>
		<type>gain</type>
		<name>Flt-UpFlt-ElvPosn=>ElvNasNoNo</name>
		<debug>false</debug>
		<enable>
			<condition>
				<or>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>altitude-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>agl-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>vertical-speed-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>gs1-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>pitch-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>aoa-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/speed</property>
						<value>speed-with-pitch-trim</value>
					</equals>
				</or>
				<or>
					<greater-than>
						<property>/controls/flight/elevator-trim</property>
						<value>0.9</value>
					</greater-than>
					<less-than>
						<property>/controls/flight/elevator-trim</property>
						<value>-0.9</value>
					</less-than>
				</or>
				<equals>
					<property>/gear/gear[0]/wow</property>
					<value>0.0</value>
				</equals>
				<equals>
					<property>/gear/gear[1]/wow</property>
					<value>0.0</value>
				</equals>
				<equals>
					<property>/gear/gear[2]/wow</property>
					<value>0.0</value>
				</equals>
        <!--  polly disable this nas driven    -->
        <value>0</value>
			</condition>
		</enable>
		<gain>1.0</gain>
		<input>
			<property>/autopilot/internal/elevator-position</property>
		</input>
		<output>/controls/flight/elevator</output>
	</filter>

  <!-- =============================================================== -->
  <!-- elevator      servo drivers.                                    -->
  <!-- =============================================================== -->

	<filter>
		<type>noise-spike</type>
		<name>Fl-tRoc-ElvSrv=>ElvFCS</name>
		<debug>false</debug>
		<feedback-if-disabled>true</feedback-if-disabled>
		<enable>
			<condition>
        <!--and>
					<equals>
    			  <property>/systems/tune/enab-THS-pid</property>
	  			  <value>0</value>
					</equals>
        </and-->
				<or>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>altitude-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>agl-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>vertical-speed-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>gs1-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>pitch-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>aoa-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/speed</property>
						<value>speed-with-pitch-trim</value>
					</equals>
				</or>
			</condition>
		</enable>
		<input>
			<property>/autopilot/internal/elevator-servo</property>
		</input>
		<output>/controls/flight/elevator</output>
		<output>/controls/flight/elevator-fcs</output>
    <max-rate-of-change>0.2</max-rate-of-change>
	</filter>

  <!-- =============================================================== -->
  <!-- elevator-trim servo drivers.                                    -->
  <!-- =============================================================== -->

  <pid-controller>
		<!--name>SERVO-DRIVER:elevator-trim (altitude/vspeed)</name-->
		<name>PID-ElvSrv=>ElVTrmFCS</name>
		<debug>false</debug>
		<feedback-if-disabled>true</feedback-if-disabled>
		<enable>
			<condition>
        <and>
					<equals>
  			    <property>/systems/tune/enab-THS-pid</property>
				    <value>1</value>
					</equals>
        </and>
				<or>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>altitude-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>agl-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>vertical-speed-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>gs1-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>pitch-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>aoa-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/speed</property>
						<value>speed-with-pitch-trim</value>
					</equals>
				</or>
			</condition>
		</enable>
		<input>
			<property>/autopilot/internal/elevator-servo</property>
		</input>
    <!-- polly  Inject input signal via kybd hotkey tgt 100x ft  -->
    <reference>
      <condition>
        <property>/systems/tune/pids-vrt3-open</property>
      </condition>
      <property>/systems/tune/poke-vert-mark</property>
    </reference>
    <reference>
      <value>0.00</value>
    </reference>
		<output>/controls/flight/elevator-trim</output>
		<output>/controls/flight/elevator-trim-fcs</output>
	  <!--polly: Copy signal to xbar: Stanza must not precede real output -->
	  <output>
		  <property>/systems/tune/pids-vrt3-out</property>
	  </output>
    <config>
      <Kp>-0.04</Kp>        <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>8.0</Ti>       <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>0.0</u_min>  <!-- minimum output clamp -->
      <u_max>1.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>


 <!-- =============================================================== -->
 <!-- Velocity Modes                                                  -->
 <!-- =============================================================== -->

  <!-- =============================================================== -->
  <!-- Speed with pitch                                                -->
  <!-- =============================================================== -->

	<!-- Step 1 - determine appropriate pitch (needed to clamp pitch within certain range) -->
	<pid-controller>
	  <!--name>Speed with Pitch</name-->
	  <name>PID-TgtSpdErr=>SpdPitDeg</name>
	  <debug>false</debug>
	  <enable>
			<condition>
				<equals>
					<property>/autopilot/locks/speed</property>
					<value>speed-with-pitch-trim</value>
				</equals>
			</condition>
	  </enable>
	  <input>
			<property>/instrumentation/airspeed-indicator/indicated-speed-kt</property>
	  </input>
	  <reference>
			<property>/autopilot/settings/target-speed-kt</property>
    </reference>
		<output>
			<property>/autopilot/internal/speed-with-pitch-pitch-deg</property>
			<scale>0.3</scale>
		</output>
		<config>
			<Kp>-0.4</Kp>
			<Ti>30.0</Ti>
			<Td>0.0</Td>
			<u_min>/autopilot/internal/umin-for-speed-with-pitch-hold</u_min>
			<u_max>/autopilot/internal/umax-for-speed-with-pitch-hold</u_max>
		</config>
	</pid-controller>

	<filter>
		<type>noise-spike</type>
		<name>Flt-RoC-SpPtDg=>SpPitDgFltd</name>
		<debug>false</debug>
		<feedback-if-disabled>true</feedback-if-disabled>
	        <enable>
			<condition>
				<equals>
					<property>/autopilot/locks/speed</property>
					<value>speed-with-pitch-trim</value>
				</equals>
			</condition>
	        </enable>
		<input>/autopilot/internal/speed-with-pitch-pitch-deg</input>
		<output>/autopilot/internal/speed-with-pitch-pitch-deg-filtered</output>
		<max-rate-of-change>0.5</max-rate-of-change>
	</filter>

	<!-- Step 2 - use pitch-hold-controller to operate the elevator-trim -->
	<pid-controller>
		<!--name>Speed with pitch - Pitch hold</name-->
		<name>PID-SpPitDegFltd=>ElvSrv</name>
		<debug>false</debug>
		<enable>
			<condition>
				<equals>
					<property>/autopilot/locks/speed</property>
					<value>speed-with-pitch-trim</value>
				</equals>
			</condition>
		</enable>
		<input>
			<property>/orientation/pitch-deg</property>
			<scale>30.0</scale>
		</input>
		<reference>
			<property>/autopilot/internal/speed-with-pitch-pitch-deg-filtered</property>
			<scale>30.0</scale>
		</reference>
		<output>
			<property>/autopilot/internal/elevator-servo</property>
		</output>
		<config>
			<Kp>-0.01</Kp>
			<beta>1.0</beta>
			<alpha>0.1</alpha>
			<gamma>0.0</gamma>
			<Ti>10.0</Ti>
			<Td>0.00001</Td>
			<u_min>-1.0</u_min>
			<u_max>1.0</u_max>
		</config>
	</pid-controller>

 <!-- Fallback if Alt|AGLHld with SpdWithPitch - control vspeed with throttle --> 
 <pid-controller>
    <!--name>Altitude-hold with throttle</name-->
    <name>PID-AltSpPt-VS=>ThrSrv</name>
    <debug>false</debug>
    <enable>
	  <condition>
		  <or>
			  <equals>
				  <property>/autopilot/locks/altitude</property>
				  <value>agl-hold</value>
			  </equals>
			  <equals>
				  <property>/autopilot/locks/altitude</property>
				  <value>altitude-hold</value>
			  </equals>
		  </or>
		  <equals>
			  <property>/autopilot/locks/speed</property>
			  <value>speed-with-pitch-trim</value>
		  </equals>
	  </condition>
    </enable>
    <input>
      <prop>/velocities/vertical-speed-fps</prop>
      <scale>0.1</scale>
    </input>
    <reference>
      <prop>/autopilot/internal/target-climb-rate-fps</prop>
      <scale>0.1</scale>
    </reference>
    <output>
      <prop>/autopilot/internal/throttle-servo</prop>
    </output>
    <config>
      <Kp>0.1</Kp>        <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>10.0</Ti>       <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>0.0</u_min>  <!-- minimum output clamp -->
      <u_max>1.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>

 <!-- Fallback if GSHld with SpdWithPitch - control vspeed with throttle --> 
 <pid-controller>
    <!--name>GS-hold with throttle</name-->
    <name>PID-GSSpPt-VSNFFltd=>ThrSrv</name>
    <debug>false</debug>
    <enable>
	<condition>
		<equals>
			<property>/autopilot/locks/altitude</property>
			<value>gs1-hold</value>
		</equals>
		<equals>
			<property>/autopilot/locks/speed</property>
			<value>speed-with-pitch-trim</value>
		</equals>
	</condition>
    </enable>
    <input>
      <prop>/velocities/vertical-speed-fps</prop>
      <scale>0.1</scale>
    </input>
    <reference>
      <prop>/autopilot/internal/gs-rate-of-climb-near-far-filtered</prop>
      <scale>0.1</scale>
    </reference>
    <output>
      <prop>/autopilot/internal/throttle-servo</prop>
    </output>
    <config>
      <Kp>0.1</Kp>        <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>10.0</Ti>       <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>0.0</u_min>  <!-- minimum output clamp -->
      <u_max>1.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>

 <!-- Auto throttle --> 
 <pid-controller>
    <!--name>Auto Throttle</name-->
    <name>PID-TgtIAS=>ThrSrv</name>
    <debug>false</debug>
    <enable>
      <prop>/autopilot/locks/speed</prop>
      <value>speed-with-throttle</value>
    </enable>
    <input>
      <prop>/velocities/airspeed-kt</prop>
    </input>
    <reference>
      <prop>/autopilot/settings/target-speed-kt</prop>
    </reference>
    <output>
      <prop>/autopilot/internal/throttle-servo</prop>
    </output>
    <config>
      <Kp>0.1</Kp>        <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>10.0</Ti>       <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>0.0</u_min>  <!-- minimum output clamp -->
      <u_max>1.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>

  <!-- =============================================================== -->
  <!-- throttle servo driver.                                          -->
  <!-- =============================================================== -->

	<filter>
		<type>noise-spike</type>
		<!--name>SERVO-DRIVER:throttle</name-->
		<name>Flt-RoC-ThrSrv=>4xThrs</name>
		<debug>false</debug>
		<feedback-if-disabled>true</feedback-if-disabled>
		<enable>
			<condition>
				<or>
					<equals>
						<property>/autopilot/locks/speed</property>
						<value>speed-with-throttle</value>
					</equals>
					<and>
						<equals>
							<property>/autopilot/locks/speed</property>
							<value>speed-with-pitch-trim</value>
						</equals>
						<or>
							<equals>
								<property>/autopilot/locks/altitude</property>
								<value>vertical-speed-hold</value>
							</equals>
							<equals>
								<property>/autopilot/locks/altitude</property>
								<value>altitude-hold</value>
							</equals>
							<equals>
								<property>/autopilot/locks/altitude</property>
								<value>agl-hold</value>
							</equals>
							<equals>
								<property>/autopilot/locks/altitude</property>
								<value>gs1-hold</value>
							</equals>
						</or>
					</and>
				</or>
			</condition>
		</enable>
		<input>/autopilot/internal/throttle-servo</input>
		<output>
			<property>/controls/engines/engine[0]/throttle</property>
			<property>/controls/engines/engine[1]/throttle</property>
			<property>/controls/engines/engine[2]/throttle</property>
			<property>/controls/engines/engine[3]/throttle</property>
		</output>
		<max-rate-of-change>0.1</max-rate-of-change>
	</filter>

</PropertyList>
